import { Injectable } from '@angular/core';
import { ManagerService } from '../manager.service';
import { AppMode, AppModeService } from '../utilServices/app-mode.service';
import { ConnectionService } from '../connection.service';
import { IndexedDbService } from '../indexedDbServices/indexedDb.service';
import { LoggerService } from '../logger.service';


export interface IAppInitializerService {
  /**
 * –Ü–Ω—ñ—Ü—ã—è–ª—ñ–∑—É–µ –ø—Ä—ã–∫–ª–∞–¥–∞–Ω–Ω–µ:
 * - –≤—ã–∑–Ω–∞—á–∞–µ —Ä—ç–∂—ã–º –ø—Ä–∞—Ü—ã (Demo / Real / Offline)
 * - –ø—Ä–∞–≤—è—Ä–∞–µ –ø–∞–¥–∫–ª—é—á—ç–Ω–Ω–µ –¥–∞ —Å–µ—Ä–≤–µ—Ä–∞
 * - –∞–¥–∫—Ä—ã–≤–∞–µ IndexedDB —ñ —Ä–æ–±—ñ—Ü—å —è–µ –¥–∞—Å—Ç—É–ø–Ω–∞–π –ø—Ä–∞–∑ IndexedDbService
 * - –≤—ã–∫–ª—ñ–∫–∞–µ –∞–≥—É–ª—å–Ω—É—é —ñ–Ω—ñ—Ü—ã—è–ª—ñ–∑–∞—Ü—ã—é –ø—Ä—ã–∫–ª–∞–¥–∞–Ω–Ω—è (ManagerService.initApp)
 */
  initializeApp(): Promise<void>;
}

@Injectable({ providedIn: 'root' })
export class AppInitializerService implements IAppInitializerService {
  constructor(
    private connectionService: ConnectionService,
    private appModeService: AppModeService,
    private managerService: ManagerService,
    private indexedDbService: IndexedDbService,
    private logger: LoggerService
  ) { }

  async initializeApp(): Promise<void> {
    if (!this.appModeService.isDemo()) {
      try {
        await this.connectionService.checkConnection();

        if (this.connectionService.isOnlineSnapshot()) {
          this.appModeService.setMode(AppMode.Real);
          console.log('üü¢ –°–µ—Ä–≤–µ—Ä –¥–∞—Å—Ç—É–ø–Ω—ã: –ø–µ—Ä–∞—Ö–æ–¥ —É Real');
        } else {
          this.appModeService.setMode(AppMode.Offline);
          console.warn('üü† –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–∞—Å—Ç—É–ø–Ω—ã: –ø–µ—Ä–∞—Ö–æ–¥ —É Offline');
        }
      } catch (e) {
        this.appModeService.setMode(AppMode.Offline);
        console.warn('üî¥ –ü–∞–º—ã–ª–∫–∞ –ø—Ä—ã –ø–∞–¥–∫–ª—é—á—ç–Ω–Ω—ñ –¥–∞ —Å–µ—Ä–≤–µ—Ä–∞:', e);
      }
    }

    const DB_NAME = 'PhotoLibDB';
    const DB_VERSION = 1;

    const db = await this.indexedDbService.initDB(DB_NAME, DB_VERSION, (db) => {
      if (!db.objectStoreNames.contains('galleries')) {
        db.createObjectStore('galleries', { keyPath: 'id' });
      }
      if (!db.objectStoreNames.contains('photos')) {
        db.createObjectStore('photos', { keyPath: 'id' });
      }
    });

    this.logger.log('--s', '‚úÖ AppInitializerService: IndexedDB —ñ–Ω—ñ—Ü—ã—è–ª—ñ–∑–∞–≤–∞–Ω–∞—è');

    await this.managerService.initApp();
  }
}
